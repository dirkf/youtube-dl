name: CI
on: [push, pull_request]

jobs:
  tests:
    name: Tests
    needs: flake8
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04]
        # TODO: python 2.6
        # python-version: [2.7, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, pypy-2.7, pypy-3.6, pypy-3.7]
        python-version: [3.9]
        python-impl: [cpython]
        python: [python]
        ytdl-test-set: [core, download]
        run-tests-ext: [sh]
        include:
        # python 3.2 is only available on windows via setup-python
        - os: windows-latest
          python-version: 3.2
          python-impl: cpython
          python: python
          ytdl-test-set: core
          run-tests-ext: bat
        - os: windows-latest
          python-version: 3.2
          python-impl: cpython
          python: python
          ytdl-test-set: download
          run-tests-ext: sh
        # jython
        - os: ubuntu-18.04
          python-impl: jython
          ytdl-test-set: core
          run-tests-ext: sh
          python: jython
        - os: ubuntu-18.04
          python-impl: jython
          ytdl-test-set: download
          run-tests-ext: sh
          python: jython
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: setup-python
      if: ${{ matrix.python-impl == 'cpython' }}
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Java 8
      if: ${{ matrix.python-impl == 'jython' }}
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Install Jython
      if: ${{ matrix.python-impl == 'jython' }}
      run: |
        wget https://repo1.maven.org/maven2/org/python/jython-installer/2.7.3/jython-installer-2.7.3.jar -O jython-installer.jar
        java -jar jython-installer.jar -s -d "$HOME/jython"
        echo "$HOME/jython/bin" >> $GITHUB_PATH
        echo PYTHON=jython >> $GITHUB_ENV
    - name: Install pytest (${{ matrix.python-impl }})
      if: ${{ matrix.python-impl == 'cpython' }}
      run: |
        ${{ matrix.python }} -m pip install pytest~=4.6.11
        [ ! -f requirements.txt ] || python -m pip install -r requirements.txt
    - name: Install pytest (Jython)
      if: ${{ matrix.python-impl == 'jython' }}
      run: |
        unzip -u -q -o test/runner/pytest-4.6.11-py27-none-any.wgn
        ${{ matrix.python }} -m pip install --no-index --find-links pytest/wheels pytest
        printf "%s\n" "import sys" "print(sys.path)" "print(sys.modules.keys())" >zzz.py
        ${{ matrix.python }} zzz.py
        cat /home/runner/jython/bin/pytest
    - name: Install pytest (check)
      if: ${{ matrix.python-impl != 'cpython' && matrix.python-impl != 'jython' }}
      run: echo "::error Unexpected python-impl ${{ matrix.python-impl }}!"
    - name: Run tests
      continue-on-error: ${{ matrix.ytdl-test-set == 'download' || matrix.python-impl == 'jython' }}
      env:
        YTDL_TEST_SET: ${{ matrix.ytdl-test-set }}
        PYTHON: ${{ matrix.python }}
      run: ./devscripts/run_tests.${{ matrix.run-tests-ext }}
  flake8:
    name: Linter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install flake8
      run: python -m pip install flake8
    - name: Lint with flake8
      run: |
        # stop the run if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

